[{"/Users/javierscars/Desktop/react-training/src/App.jsx":"1","/Users/javierscars/Desktop/react-training/src/index.jsx":"2","/Users/javierscars/Desktop/react-training/src/reportWebVitals.js":"3","/Users/javierscars/Desktop/react-training/src/routes/index.jsx":"4","/Users/javierscars/Desktop/react-training/src/pages/index.js":"5","/Users/javierscars/Desktop/react-training/src/components/EventCard.jsx":"6","/Users/javierscars/Desktop/react-training/src/pages/home/Home.jsx":"7","/Users/javierscars/Desktop/react-training/src/components/Footer.jsx":"8","/Users/javierscars/Desktop/react-training/src/components/Header.jsx":"9","/Users/javierscars/Desktop/react-training/src/components/Background.jsx":"10","/Users/javierscars/Desktop/react-training/src/components/index.js":"11","/Users/javierscars/Desktop/react-training/src/pages/Auth/Auth.jsx":"12","/Users/javierscars/Desktop/react-training/src/pages/Auth/components/SignUp.jsx":"13","/Users/javierscars/Desktop/react-training/src/pages/Auth/components/SignIn.jsx":"14"},{"size":133,"mtime":1607388773508,"results":"15","hashOfConfig":"16"},{"size":2671,"mtime":1607719789444,"results":"17","hashOfConfig":"18"},{"size":323,"mtime":1607385162217,"results":"19","hashOfConfig":"16"},{"size":345,"mtime":1607707968923,"results":"20","hashOfConfig":"18"},{"size":65,"mtime":1607706414238,"results":"21","hashOfConfig":"18"},{"size":1667,"mtime":1607706414236,"results":"22","hashOfConfig":"18"},{"size":8609,"mtime":1607708074451,"results":"23","hashOfConfig":"18"},{"size":2038,"mtime":1607706414236,"results":"24","hashOfConfig":"18"},{"size":1493,"mtime":1607707956237,"results":"25","hashOfConfig":"18"},{"size":308,"mtime":1607708048438,"results":"26","hashOfConfig":"18"},{"size":273,"mtime":1607708063175,"results":"27","hashOfConfig":"18"},{"size":697,"mtime":1607711832517,"results":"28","hashOfConfig":"18"},{"size":5700,"mtime":1607720303120,"results":"29","hashOfConfig":"18"},{"size":3689,"mtime":1607718764442,"results":"30","hashOfConfig":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u4qw8a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"td657u",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/javierscars/Desktop/react-training/src/App.jsx",[],"/Users/javierscars/Desktop/react-training/src/index.jsx",[],"/Users/javierscars/Desktop/react-training/src/reportWebVitals.js",[],"/Users/javierscars/Desktop/react-training/src/routes/index.jsx",[],"/Users/javierscars/Desktop/react-training/src/pages/index.js",[],"/Users/javierscars/Desktop/react-training/src/components/EventCard.jsx",[],"/Users/javierscars/Desktop/react-training/src/pages/home/Home.jsx",["60","61","62","63"],"import {\n  Box,\n  Checkbox,\n  Flex,\n  Heading,\n  Img,\n  Input,\n  Select,\n} from '@chakra-ui/react'\nimport * as datefns from 'date-fns'\nimport React, { useEffect, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport SwipperCore, { Autoplay } from 'swiper'\nimport DatePicker from 'react-datepicker'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { useCookies } from 'react-cookie'\nimport {\n  FooterComponent,\n  HeaderComponent,\n  EventCardComponent,\n  Background,\n} from '../../components/index'\nimport 'swiper/swiper.scss'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nSwipperCore.use(Autoplay)\n\nconst HomePage = () => {\n  const [cookies, setCookie, removeCookie] = useCookies(['session'])\n\n  const { data: events } = useQuery('repoData', () =>\n    fetch('http://localhost:5000/events?_expand=user')\n      .then((res) => res.json())\n      .then(\n        (allEvents) =>\n          allEvents &&\n          allEvents.length &&\n          allEvents.filter(\n            (event) => new Date(event.date).getTime() > new Date().getTime(),\n          ),\n      )\n      .then((allEvents) => {\n        setFilteredEvents(allEvents)\n        return allEvents\n      }),\n  )\n\n  const [nextEvents, setNextEvents] = useState([])\n  useEffect(() => {\n    if (events && events.length > 0) {\n      setNextEvents(\n        events.filter(\n          (event) =>\n            datefns.differenceInCalendarDays(new Date(), new Date(event.date)) <\n            15,\n        ),\n      )\n    }\n  }, [events])\n\n  const [eventFilters, setEventFilters] = useState({\n    hostname: '',\n    location: '',\n    type: '',\n    date: new Date(),\n    useDate: false,\n  })\n  useEffect(() => {\n    if (events) {\n      let eventsCopy = [...events]\n      eventsCopy = eventsCopy.filter((event) => {\n        if (\n          eventFilters.hostname &&\n          !`${event.user.firstName} ${event.user.lastName} ${event.user.username}`\n            .toUpperCase()\n            .includes(eventFilters.hostname)\n        ) {\n          return false\n        }\n        if (\n          eventFilters.location &&\n          !event.location.toUpperCase().includes(eventFilters.location)\n        ) {\n          return false\n        }\n        if (\n          !Number.isNaN(parseInt(eventFilters.type, 10)) &&\n          parseInt(eventFilters.type, 10) !== parseInt(event.type, 10)\n        ) {\n          return false\n        }\n        if (\n          eventFilters.useDate &&\n          new Date(eventFilters.date) &&\n          datefns.differenceInCalendarDays(\n            new Date(eventFilters.date),\n            new Date(event.date),\n          ) !== 0\n        ) {\n          return false\n        }\n        return true\n      })\n      setFilteredEvents(eventsCopy)\n    }\n  }, [eventFilters, events])\n\n  const [filteredEvents, setFilteredEvents] = useState([])\n\n  const filterInputStyles = {\n    marginTop: '1rem',\n    marginX: '2rem',\n    variant: 'unstyled',\n    bgColor: 'rgba(0,0,0,0.4)',\n    color: 'white',\n    fontWeight: 'bolder',\n    size: 'md',\n    paddingY: '0.5rem',\n    paddingX: '1rem',\n    textAlign: 'center',\n    width: '15rem',\n  }\n\n  return (\n    <Flex direction=\"column\" minH=\"100vh\">\n      <Background />\n      <HeaderComponent></HeaderComponent>\n      <Box flexGrow=\"1\" margin=\"auto\" height=\"100%\" width=\"100%\">\n        <Heading\n          marginTop=\"6rem\"\n          colorScheme=\"primary\"\n          textAlign=\"center\"\n          fontSize=\"2rem\"\n          color=\"white\"\n        >\n          <Box\n            color=\"primary.50\"\n            textTransform=\"uppercase\"\n            textShadow=\"0px 3px 6px rgba(255, 214, 245, 0.4)\"\n            fontStyle=\"italic\"\n          >\n            Whenever\n          </Box>\n          <Box\n            color=\"primary.50\"\n            textTransform=\"uppercase\"\n            textShadow=\"0px 5px 10px rgba(255, 200, 200, 0.5)\"\n            fontStyle=\"italic\"\n          >\n            wherever\n          </Box>\n          <Box>There is always something to do!</Box>\n        </Heading>\n        <Heading\n          as=\"h2\"\n          textAlign=\"center\"\n          color=\"primary.50\"\n          marginTop=\"4rem\"\n          marginBottom=\"1rem\"\n        >\n          Next Events\n        </Heading>\n        <Box bgColor=\"rgba(50,50,50,0.3)\" height=\"24rem\">\n          {nextEvents && nextEvents.length && (\n            <Swiper\n              spaceBetween={30}\n              slidesPerView={3}\n              autoplay={{ delay: 3000, disableOnInteraction: false }}\n              speed={1000}\n              loop\n            >\n              {nextEvents.map((event, index) => (\n                <SwiperSlide key={index}>\n                  <EventCardComponent\n                    event={event}\n                    width=\"18rem\"\n                    height=\"18rem\"\n                  />\n                </SwiperSlide>\n              ))}\n            </Swiper>\n          )}\n        </Box>\n        <Box>\n          <Heading\n            as=\"h2\"\n            textAlign=\"center\"\n            color=\"primary.50\"\n            marginTop=\"4rem\"\n          >\n            Other Events\n          </Heading>\n          <Flex direction=\"column\" alignItems=\"center\" marginTop=\"1rem\">\n            <Heading as=\"h3\" fontSize=\"1.5rem\" color=\"primary.50\">\n              Filter By\n            </Heading>\n            <Flex marginTop=\"0.5rem\" wrap=\"wrap\" justifyContent=\"center\">\n              <Input\n                {...filterInputStyles}\n                placeholder=\"HostName\"\n                value={eventFilters.hostname}\n                onChange={(e) =>\n                  setEventFilters((old) => ({\n                    ...old,\n                    hostname: e.target.value.toUpperCase(),\n                  }))\n                }\n              />\n              <Input\n                placeholder=\"Location\"\n                {...filterInputStyles}\n                value={eventFilters.location}\n                onChange={(e) =>\n                  setEventFilters((old) => ({\n                    ...old,\n                    location: e.target.value.toUpperCase(),\n                  }))\n                }\n              />\n              <Box marginTop=\"1rem\" marginX=\"2rem\">\n                <Select\n                  placeholder=\"Event Type\"\n                  width=\"15rem\"\n                  bgColor=\"rgba(0,0,0,0.4)\"\n                  color=\"white\"\n                  fontWeight=\"bolder\"\n                  value={eventFilters.type}\n                  onChange={(e) =>\n                    setEventFilters((old) => ({ ...old, type: e.target.value }))\n                  }\n                >\n                  <option value={1}>Free</option>\n                  <option value={0}>VIP</option>\n                  <option value=\"\">Both</option>\n                </Select>\n              </Box>\n              <Box\n                position=\"relative\"\n                marginTop=\"1rem\"\n                marginX=\"2rem\"\n                width=\"15rem\"\n              >\n                <Checkbox\n                  color=\"white\"\n                  fontWeight=\"bolder\"\n                  position=\"absolute\"\n                  zIndex=\"1\"\n                  top=\"-0.8rem\"\n                  left=\"0\"\n                  value={eventFilters.useDate}\n                  onChange={(e) =>\n                    setEventFilters((old) => ({\n                      ...old,\n                      useDate: e.target.checked,\n                    }))\n                  }\n                >\n                  Use date\n                </Checkbox>\n                <DatePicker\n                  width=\"15rem\"\n                  selected={eventFilters.date}\n                  disabled={!eventFilters.useDate}\n                  className={\n                    eventFilters.useDate\n                      ? 'date-picker--active'\n                      : 'date-picker--disabled'\n                  }\n                  onChange={(e) =>\n                    setEventFilters((old) => ({ ...old, date: e }))\n                  }\n                  minDate={new Date()}\n                />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex wrap=\"wrap\" justifyContent=\"center\" alignItems=\"center\">\n            {filteredEvents &&\n              filteredEvents.map((event) => (\n                <Box\n                  key={event.id}\n                  h=\"24rem\"\n                  w=\"24rem\"\n                  as=\"span\"\n                  marginTop=\"2rem\"\n                >\n                  <EventCardComponent event={event} />\n                </Box>\n              ))}\n          </Flex>\n        </Box>\n      </Box>\n      <Box marginTop=\"4rem\">\n        <FooterComponent></FooterComponent>\n      </Box>\n    </Flex>\n  )\n}\nexport { HomePage }\n","/Users/javierscars/Desktop/react-training/src/components/Footer.jsx",[],"/Users/javierscars/Desktop/react-training/src/components/Header.jsx",[],"/Users/javierscars/Desktop/react-training/src/components/Background.jsx",[],"/Users/javierscars/Desktop/react-training/src/components/index.js",[],"/Users/javierscars/Desktop/react-training/src/pages/Auth/Auth.jsx",["64","65"],"/Users/javierscars/Desktop/react-training/src/pages/Auth/components/SignUp.jsx",["66"],"/Users/javierscars/Desktop/react-training/src/pages/Auth/components/SignIn.jsx",["67"],{"ruleId":"68","severity":1,"message":"69","line":6,"column":3,"nodeType":"70","messageId":"71","endLine":6,"endColumn":6},{"ruleId":"68","severity":1,"message":"72","line":29,"column":10,"nodeType":"70","messageId":"71","endLine":29,"endColumn":17},{"ruleId":"68","severity":1,"message":"73","line":29,"column":19,"nodeType":"70","messageId":"71","endLine":29,"endColumn":28},{"ruleId":"68","severity":1,"message":"74","line":29,"column":30,"nodeType":"70","messageId":"71","endLine":29,"endColumn":42},{"ruleId":"68","severity":1,"message":"75","line":2,"column":17,"nodeType":"70","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":8,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":50,"column":7,"nodeType":"78","messageId":"79","endLine":50,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":49,"column":7,"nodeType":"78","messageId":"79","endLine":49,"endColumn":18},"no-unused-vars","'Img' is defined but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'useEffect' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected"]